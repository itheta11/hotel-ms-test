// <auto-generated />
using System;
using KamathResidency.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KamathResidency.Migrations
{
    [DbContext(typeof(KamahResidencyContext))]
    [Migration("20250123173057_AddBookingRoomAssociation")]
    partial class AddBookingRoomAssociation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("BookingRoomAssociation", b =>
                {
                    b.Property<string>("BookingId")
                        .HasColumnType("TEXT");

                    b.Property<long>("RoomId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BookingId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("Booking_Room_Association", (string)null);
                });

            modelBuilder.Entity("KamathResidency.Infrastructure.Booking", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id")
                        .HasDefaultValueSql("lower(hex(randomblob(16)))");

                    b.Property<double?>("AdvanceAmount")
                        .HasColumnType("REAL")
                        .HasColumnName("advance_amount");

                    b.Property<byte[]>("CheckIn")
                        .IsRequired()
                        .HasColumnType("DATETIME")
                        .HasColumnName("check_in");

                    b.Property<byte[]>("CheckOut")
                        .IsRequired()
                        .HasColumnType("DATETIME")
                        .HasColumnName("check_out");

                    b.Property<byte[]>("CreatedAt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<byte[]>("ModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("modified_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<double>("TotalBill")
                        .HasColumnType("REAL")
                        .HasColumnName("total_bill");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("KamathResidency.Infrastructure.Room", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<byte[]>("CreatedAt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<long?>("Floor")
                        .HasColumnType("INTEGER")
                        .HasColumnName("floor");

                    b.Property<byte[]>("IsAc")
                        .HasColumnType("BOOLEAN")
                        .HasColumnName("is_ac");

                    b.Property<string>("RoomType")
                        .HasColumnType("TEXT")
                        .HasColumnName("room_type");

                    b.HasKey("Id");

                    b.ToTable("Room", (string)null);
                });

            modelBuilder.Entity("KamathResidency.Infrastructure.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id")
                        .HasDefaultValueSql("lower(hex(randomblob(16)))");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("address");

                    b.Property<byte[]>("CreatedAt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("IdProof")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id_Proof");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<byte[]>("PhoneNumber")
                        .HasColumnType("NUMERIC")
                        .HasColumnName("phone_Number");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("BookingRoomAssociation", b =>
                {
                    b.HasOne("KamathResidency.Infrastructure.Booking", null)
                        .WithMany()
                        .HasForeignKey("BookingId")
                        .IsRequired();

                    b.HasOne("KamathResidency.Infrastructure.Room", null)
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .IsRequired();
                });

            modelBuilder.Entity("KamathResidency.Infrastructure.Booking", b =>
                {
                    b.HasOne("KamathResidency.Infrastructure.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("KamathResidency.Infrastructure.User", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
